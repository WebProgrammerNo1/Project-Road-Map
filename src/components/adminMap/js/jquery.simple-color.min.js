/*
 * jQuery simple-color plugin
 * @requires jQuery v1.4.2 or later
 *
 * See http://recursive-design.com/projects/jquery-simple-color/
 *
 * Licensed under the MIT license:
 *   http://www.opensource.org/licenses/mit-license.php
 *
 * Version: 1.0.1 (201108151520)
 */
(function (c) {
  c.fn.simpleColor = function (b) {
    var o = ["ee1414", "000099", "00cc00"];
    b = c.extend(
      {
        defaultColor: this.attr("defaultColor") || "#FFF",
        border: this.attr("border") || "1px solid #000",
        cellWidth: this.attr("cellWidth") || 24,
        cellHeight: this.attr("cellHeight") || 10,
        cellMargin: this.attr("cellMargin") || 1,
        boxWidth: this.attr("boxWidth") || "86px",
        boxHeight: this.attr("boxHeight") || "20px",
        columns: this.attr("columns") || 16,
        insert: this.attr("insert") || "after",
        buttonClass: this.attr("buttonClass") || "",
        colors: this.attr("colors") || o,
        displayColorCode: this.attr("displayColorCode") || false,
        colorCodeAlign: this.attr("colorCodeAlign") || "center",
        colorCodeColor: this.attr("colorCodeColor") || "#FFF",
      },
      b || {}
    );
    this.hide();
    b.totalWidth = b.columns * (b.cellWidth + 2 * b.cellMargin);
    if (c.browser.msie) b.totalWidth += 2;
    b.totalHeight =
      Math.ceil(b.colors.length / b.columns) *
      (b.cellHeight + 2 * b.cellMargin);
    c.simpleColorOptions = b;
    this.each(function () {
      var a = c.simpleColorOptions,
        i = c("<div class='simpleColorContainer' />"),
        l = this.value && this.value != "" ? this.value : a.defaultColor,
        d = c("<div class='simpleColorDisplay' />");
      d.css("backgroundColor", l);
      d.css("border", a.border);
      d.css("width", a.boxWidth);
      d.css("height", a.boxHeight);
      d.css("cursor", "pointer");
      i.append(d);
      if (a.displayColorCode) {
        d.text(this.value);
        d.css("color", a.colorCodeColor);
        d.css("textAlign", a.colorCodeAlign);
        d.css("display", a.colorCodeFlex);
      }
      var j =
        c();
        // "<input type='button' value='Select' class='simpleColorSelectButton " +
        //   a.buttonClass +
        //   "'>"
      i.append(j);
      var k =
        c();
        // "<input type='button' value='Cancel' class='simpleColorCancelButton " +
        //   a.buttonClass +
        //   "'>"
      i.append(k);
      k.hide();
      l = function (e) {
        e.data.select_button.hide();
        e.data.cancel_button.show();
        if (e.data.container.chooser) e.data.container.chooser.show();
        else {
          var g = c("<div class='simpleColorChooser'/>");
          g.css("border", a.border);
          g.css("margin", "0px");
          g.css("margin-top", "3px");
          g.css("width", 80 + "px");
          g.css("height", a.totalHeight + "px");
          e.data.container.chooser = g;
          e.data.container.append(g);
          for (var m = 0; m < a.colors.length; m++) {
            var f = c(
              "<div class='simpleColorCell' id='" + a.colors[m] + "'/>"
            );
            f.css("width", a.cellWidth + "px");
            f.css("height", a.cellHeight + "px");
            f.css("margin", a.cellMargin + "px");
            f.css("cursor", "pointer");
            f.css("lineHeight", a.cellHeight + "px");
            f.css("fontSize", "1px");
            f.css("float", "left");
            f.css("backgroundColor", "#" + a.colors[m]);
            g.append(f);
            f.bind(
              "click",
              {
                input: e.data.input,
                chooser: g,
                select_button: j,
                cancel_button: k,
                display_box: d,
              },
              function (h) {
                h.data.input.value = "#" + this.id;
                c(h.data.input).change();
                h.data.display_box.css("backgroundColor", "#" + this.id);
                h.data.chooser.hide();
                h.data.cancel_button.hide();
                h.data.display_box.show();
                h.data.select_button.show();
                a.displayColorCode && h.data.display_box.text("#" + this.id);
              }
            );
          }
        }
      };
      var n = {
        container: i,
        input: this,
        cancel_button: k,
        display_box: d,
        select_button: j,
      };
      j.bind("click", n, l);
      d.bind("click", n, l);
      k.bind(
        "click",
        { container: i, select_button: j, display_box: d },
        function (e) {
          c(this).hide();
          e.data.container.find(".simpleColorChooser").hide();
          e.data.display_box.show();
          e.data.select_button.show();
        }
      );
      c(this).after(i);
    });
    return this;
  };
  c.fn.closeSelector = function () {
    this.each(function () {
      var b = c(this).parent().find("div.simpleColorContainer");
      b.find(".simpleColorCancelButton").hide();
      b.find(".simpleColorChooser").hide();
      b.find(".simpleColorDisplay").show();
      b.find(".simpleColorSelectButton").show();
    });
    return this;
  };
})(jQuery);
